{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,S,I,GCEA,IAAM,EAAa,iBAYZ,OAAM,EAIX,YAAY,CAAM,CAAE,CAFZ,IAAA,CAAA,aAAA,CAAgC,KAGtC,IAAI,CAAC,EAAE,CAAG,CACZ,CASA,oBAA8B,CAI5B,OAH0B,MAAtB,IAAI,CAAC,aAAa,EACpB,CAAA,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CA1BlC,GAAG,0BAA+B,CAyBvC,EAGO,IAAI,CAAC,aAAa,AAC3B,CAEA,WAAW,CAAkB,CAAY,CACvC,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAW,CAAC,EAAE,EAAW,CAAC,CACxD,CACF,C,G,E,Q,S,C,C,C,E,E,E,O,C,U,I,ECrCO,OAAM,EAGX,YAAY,CAAM,CAAE,CAClB,IAAI,CAAC,EAAE,CAAG,CACZ,CAEA,WAAsB,CACpB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,UACvB,CAEA,UAAqB,CACnB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,UACvB,CACF,C,G,I,E,E,S,E,E,S,E,E,S,E,E,SCSA,IAAI,EAAA,IAAG,CAAE,cAAe,AAAC,IAGvB,IAAM,EAAU,IAAI,EAAA,OAAM,CAAE,GACtB,EAAS,IAAI,EAAA,MAAK,CAAE,EAE1B,CAAA,EAAG,OAAO,CAAG,KACX,EAAO,kBAAkB,EAC3B,EAEA,EAAG,KAAK,CAAG,KACT,EAAG,YAAY,CAVP,IACA,IAUV,EAEA,EAAG,IAAI,CAAG,KACR,EAAG,UAAU,CAAC,EAAQ,SAAS,IAC/B,EAAG,MAAM,GAET,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,EAAI,KACV,EAAG,MAAM,CAAC,EAAQ,QAAQ,IAC1B,EAAG,YAAY,CAAC,IAChB,EAAG,MAAM,CAAC,EAAG,MAAM,CApBb,KAoBkB,EAAG,MAAM,CAnB3B,KAmBgC,IACxC,GAEA,AArCJ,SAAmB,CAAM,CAAE,CAAsB,EAC/C,GAAM,CAAC,EAAG,EAAE,CAAG,EAAO,YAAY,CAClC,EAAG,IAAI,GACP,EAAG,SAAS,CAAC,EAAG,KAAK,CAAE,EAAG,MAAM,EAChC,EAAG,QAAQ,GACX,EAAG,IAAI,CAAC,EAAO,KAAK,EACpB,EAAG,QAAQ,CAAC,EAAO,IAAI,EACvB,EAAG,QAAQ,CAAC,IACZ,IAAM,EAAM,AAAgB,IAAhB,EAAG,QAAQ,GACvB,EAAG,IAAI,CAAC,CAAC,IAAI,EAAE,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,IAAmB,CAAC,CAAC,CAAE,EAAI,EAAK,EAAI,GACnD,EAAG,GAAG,EACR,EA0Bc,EAAI,CACZ,aAAc,CAxBR,IACA,IAuBc,CACpB,MAAO,EAAQ,QAAQ,GACvB,KAAM,EAAO,kBAAkB,EACjC,GAEA,EAAG,MAAM,EACX,CACF","sources":["<anon>","src/lib/assets.ts","src/lib/palette.ts","src/sketches/p0/01_random_seed/index.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire98dc\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire98dc\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7LI5f\", function(module, exports) {\n\n$parcel$export(module.exports, \"Assets\", () => $d64c2e6e79d64407$export$c8eca95e306f7116);\nconst $d64c2e6e79d64407$var$ASSET_PATH = \"/etching/assets\";\nfunction $d64c2e6e79d64407$var$font_path(font_name) {\n    return `${$d64c2e6e79d64407$var$ASSET_PATH}/fonts/${font_name}`;\n}\nclass $d64c2e6e79d64407$export$c8eca95e306f7116 {\n    constructor(p5){\n        this.special_elite = null;\n        this.p5 = p5;\n    }\n    /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */ load_special_elite() {\n        if (this.special_elite == null) this.special_elite = this.p5.loadFont($d64c2e6e79d64407$var$font_path(\"SpecialElite.ttf\"));\n        return this.special_elite;\n    }\n    load_image(asset_path) {\n        return this.p5.loadImage(`${$d64c2e6e79d64407$var$ASSET_PATH}/${asset_path}`);\n    }\n}\n\n});\n\nparcelRegister(\"9DS0H\", function(module, exports) {\n\n$parcel$export(module.exports, \"Palette\", () => $d0095abaf5e261c5$export$e2fbaa661ec19dbf);\nclass $d0095abaf5e261c5$export$e2fbaa661ec19dbf {\n    constructor(p5){\n        this.p5 = p5;\n    }\n    old_paper() {\n        return this.p5.color(\"#E0C9A6\");\n    }\n    gunmetal() {\n        return this.p5.color(\"#2E2F2E\");\n    }\n}\n\n});\n\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\n\nvar $7LI5f = parcelRequire(\"7LI5f\");\n\nvar $9DS0H = parcelRequire(\"9DS0H\");\nfunction $f6017bd43053f822$var$draw_seed(p5, params) {\n    const [x, y] = params.bottom_right;\n    p5.push();\n    p5.textAlign(p5.RIGHT, p5.BOTTOM);\n    p5.noStroke();\n    p5.fill(params.color);\n    p5.textFont(params.font);\n    p5.textSize(15);\n    const pad = p5.textSize() * 0.25;\n    p5.text(`[id:${(0, $7vzAp.get_current_seed)()}]`, x - pad, y - pad);\n    p5.pop();\n}\nnew (0, $7vzAp.Page)(\"Random Seed\", (p5)=>{\n    const w = 800;\n    const h = 1000;\n    const palette = new (0, $9DS0H.Palette)(p5);\n    const assets = new (0, $7LI5f.Assets)(p5);\n    p5.preload = ()=>{\n        assets.load_special_elite();\n    };\n    p5.setup = ()=>{\n        p5.createCanvas(w, h);\n    };\n    p5.draw = ()=>{\n        p5.background(palette.old_paper());\n        p5.noFill();\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.stroke(palette.gunmetal());\n            p5.strokeWeight(10);\n            p5.circle(p5.random(w), p5.random(h), 200);\n        });\n        $f6017bd43053f822$var$draw_seed(p5, {\n            bottom_right: [\n                w,\n                h\n            ],\n            color: palette.gunmetal(),\n            font: assets.load_special_elite()\n        });\n        p5.noLoop();\n    };\n});\n\n\n//# sourceMappingURL=index.bd2c72d3.js.map\n","import P5 from \"p5\";\n\nconst ASSET_PATH = \"/etching/assets\";\n\nfunction font_path(font_name: string): string {\n  return `${ASSET_PATH}/fonts/${font_name}`;\n}\n\n/**\n * Represents Assets in the assets folder.\n *\n * Individual assets are lazily loaded and can be preloaded synchronously in\n * a sketches preload() method if desired.\n */\nexport class Assets {\n  private p5: P5;\n  private special_elite: P5.Font | null = null;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */\n  load_special_elite(): P5.Font {\n    if (this.special_elite == null) {\n      this.special_elite = this.p5.loadFont(font_path(\"SpecialElite.ttf\"));\n    }\n    return this.special_elite;\n  }\n\n  load_image(asset_path: string): P5.Image {\n    return this.p5.loadImage(`${ASSET_PATH}/${asset_path}`);\n  }\n}\n","import P5 from \"p5\";\n\nexport class Palette {\n  private p5: P5;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  old_paper(): P5.Color {\n    return this.p5.color(\"#E0C9A6\");\n  }\n\n  gunmetal(): P5.Color {\n    return this.p5.color(\"#2E2F2E\");\n  }\n}\n","import { Page, get_current_seed } from \"~/src/lib/page\";\nimport { pushpop } from \"~/src/lib/p5_state\";\nimport { Assets } from \"~/src/lib/assets\";\nimport { Palette } from \"~/src/lib/palette\";\nimport P5 from \"p5\";\n\ninterface DrawSeedParams {\n  bottom_right: [number, number];\n  color: P5.Color;\n  font: P5.Font;\n}\n\nfunction draw_seed(p5: P5, params: DrawSeedParams) {\n  const [x, y] = params.bottom_right;\n  p5.push();\n  p5.textAlign(p5.RIGHT, p5.BOTTOM);\n  p5.noStroke();\n  p5.fill(params.color);\n  p5.textFont(params.font);\n  p5.textSize(15);\n  const pad = p5.textSize() * 0.25;\n  p5.text(`[id:${get_current_seed()}]`, x - pad, y - pad);\n  p5.pop();\n}\n\nnew Page(\"Random Seed\", (p5: P5) => {\n  const w = 800;\n  const h = 1000;\n  const palette = new Palette(p5);\n  const assets = new Assets(p5);\n\n  p5.preload = () => {\n    assets.load_special_elite();\n  };\n\n  p5.setup = () => {\n    p5.createCanvas(w, h);\n  };\n\n  p5.draw = () => {\n    p5.background(palette.old_paper());\n    p5.noFill();\n\n    pushpop(p5, () => {\n      p5.stroke(palette.gunmetal());\n      p5.strokeWeight(10);\n      p5.circle(p5.random(w), p5.random(h), 200);\n    });\n\n    draw_seed(p5, {\n      bottom_right: [w, h],\n      color: palette.gunmetal(),\n      font: assets.load_special_elite(),\n    });\n\n    p5.noLoop();\n  };\n});\n\nexport {};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$d64c2e6e79d64407$export$c8eca95e306f7116","$d64c2e6e79d64407$var$ASSET_PATH","constructor","p5","special_elite","load_special_elite","loadFont","load_image","asset_path","loadImage","$d0095abaf5e261c5$export$e2fbaa661ec19dbf","old_paper","color","gunmetal","$7vzAp","$aYfvi","$7LI5f","$9DS0H","Page","palette","Palette","assets","Assets","preload","setup","createCanvas","draw","background","noFill","pushpop","stroke","strokeWeight","circle","random","$f6017bd43053f822$var$draw_seed","params","x","y","bottom_right","push","textAlign","RIGHT","BOTTOM","noStroke","fill","textFont","font","textSize","pad","text","get_current_seed","pop","noLoop"],"version":3,"file":"index.bd2c72d3.js.map"}