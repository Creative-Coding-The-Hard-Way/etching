{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,S,I,G,I,E,E,S,E,E,S,E,E,S,E,E,QCMO,OAAM,EAMX,YAAmB,CAAM,CAAE,CAAmB,CAAE,CAC9C,IAAI,CAAC,MAAM,CAAG,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,GAC7B,IAAI,CAAC,OAAO,CAAG,IAAI,EAAA,OAAM,CAAE,GAC3B,IAAI,CAAC,MAAM,CAAG,IAAI,EAAA,MAAK,CAAE,GACzB,IAAI,CAAC,EAAE,CAAG,CACZ,CAOO,eAAgB,CACrB,IAAI,CAAC,EAAE,CAAC,IAAI,GACZ,IAAI,CAAC,EAAE,CAAC,QAAQ,GAChB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAE/B,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,CAAC,EAGf,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,CAAC,EAGf,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAGpB,IAAI,CAAC,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","sources":["<anon>","src/lib/sketch/index.ts","src/lib/palette.ts","src/lib/assets.ts","src/lib/sketch/layout.ts","src/sketches/p0/04_brush/index.ts","src/lib/brush.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire98dc\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire98dc\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jDwty\", function(module, exports) {\n\n$parcel$export(module.exports, \"Sketch\", () => $ee4d6d24a0d6b1f4$export$361fce2090be193f);\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\n\nvar $9DS0H = parcelRequire(\"9DS0H\");\n\nvar $7LI5f = parcelRequire(\"7LI5f\");\n\nvar $18izm = parcelRequire(\"18izm\");\nclass $ee4d6d24a0d6b1f4$export$361fce2090be193f {\n    constructor(p5, params){\n        this.layout = (0, $18izm.compute_layout)(params);\n        this.palette = new (0, $9DS0H.Palette)(p5);\n        this.assets = new (0, $7LI5f.Assets)(p5);\n        this.p5 = p5;\n    }\n    /**\n   * Fills the sketch margins with rects.\n   *\n   * The caller must set the fill color prior to calling this method.\n   */ paint_margins() {\n        this.p5.push();\n        this.p5.noStroke();\n        this.p5.rectMode(this.p5.CORNER);\n        // left side\n        this.p5.rect(this.layout.left, this.layout.top, this.layout.margin, this.layout.h);\n        // right side\n        this.p5.rect(this.layout.scene.right, this.layout.top, this.layout.margin, this.layout.h);\n        // top\n        this.p5.rect(this.layout.scene.left, this.layout.top, this.layout.scene.w, this.layout.margin);\n        // bottom\n        this.p5.rect(this.layout.scene.left, this.layout.scene.bottom, this.layout.scene.w, this.layout.margin);\n        this.p5.pop();\n    }\n    draw_seed() {\n        this.p5.push();\n        this.p5.textAlign(this.p5.RIGHT, this.p5.BOTTOM);\n        this.p5.noStroke();\n        this.p5.textSize(15);\n        const pad = this.p5.textSize() * 0.25;\n        this.p5.text(`[id:${(0, $7vzAp.get_current_seed)()}]`, this.layout.right - pad, this.layout.bottom - pad);\n        this.p5.pop();\n    }\n}\n\n});\nparcelRegister(\"9DS0H\", function(module, exports) {\n\n$parcel$export(module.exports, \"Palette\", () => $d0095abaf5e261c5$export$e2fbaa661ec19dbf);\nclass $d0095abaf5e261c5$export$e2fbaa661ec19dbf {\n    constructor(p5){\n        this.p5 = p5;\n    }\n    old_paper() {\n        return this.p5.color(\"#E0C9A6\");\n    }\n    gunmetal() {\n        return this.p5.color(\"#2E2F2E\");\n    }\n}\n\n});\n\nparcelRegister(\"7LI5f\", function(module, exports) {\n\n$parcel$export(module.exports, \"Assets\", () => $d64c2e6e79d64407$export$c8eca95e306f7116);\nconst $d64c2e6e79d64407$var$ASSET_PATH = \"/etching/assets\";\nfunction $d64c2e6e79d64407$var$font_path(font_name) {\n    return `${$d64c2e6e79d64407$var$ASSET_PATH}/fonts/${font_name}`;\n}\nclass $d64c2e6e79d64407$export$c8eca95e306f7116 {\n    constructor(p5){\n        this.special_elite = null;\n        this.p5 = p5;\n    }\n    /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */ load_special_elite() {\n        if (this.special_elite == null) this.special_elite = this.p5.loadFont($d64c2e6e79d64407$var$font_path(\"SpecialElite.ttf\"));\n        return this.special_elite;\n    }\n    load_image(asset_path) {\n        return this.p5.loadImage(`${$d64c2e6e79d64407$var$ASSET_PATH}/${asset_path}`);\n    }\n}\n\n});\n\nparcelRegister(\"18izm\", function(module, exports) {\n\n$parcel$export(module.exports, \"compute_layout\", () => $7a93ed990456373c$export$e8aff8e43fab5f06);\nfunction $7a93ed990456373c$export$e8aff8e43fab5f06(params) {\n    let { width: width, height: height, margin: margin } = params;\n    const aspect = width / height;\n    const margin_ratio = margin / Math.max(width, height);\n    // re-compute the width and height such that the height\n    // is constrained by the window height\n    if (height > window.innerHeight) {\n        height = window.innerHeight;\n        width = height * aspect;\n    }\n    if (width > window.innerWidth) {\n        width = window.innerWidth;\n        height = width / aspect;\n    }\n    margin = margin_ratio * Math.max(width, height);\n    return {\n        margin: margin,\n        w: width,\n        h: height,\n        left: 0,\n        right: width,\n        top: 0,\n        bottom: height,\n        center_x: width / 2,\n        center_y: height / 2,\n        scene: {\n            w: width - margin * 2,\n            h: height - margin * 2,\n            left: margin,\n            top: margin,\n            right: width - margin,\n            bottom: height - margin,\n            center_x: width / 2,\n            center_y: height / 2\n        },\n        em: Math.min(width, height) / 50\n    };\n}\n\n});\n\n\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\n\nvar $jDwty = parcelRequire(\"jDwty\");\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\nclass $ef2c7adfdc7db0da$export$59bc2e3533b384a0 {\n    constructor(p5, props){\n        this.p5 = p5;\n        this.props = props;\n        this.brush_size = 1;\n    }\n    set_size(brush_size) {\n        this.brush_size = brush_size;\n    }\n    line(x1, y1, x2, y2) {\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        const max_len = this.p5.dist(x1, y1, x2, y2);\n        let remaining_len = max_len;\n        while(remaining_len >= 0){\n            const n = 1.0 - remaining_len / max_len;\n            const stamp_size = this.brush_size * (1 + this.jitter(this.props.size_jitter));\n            const offset = this.position_jitter(line_angle, stamp_size);\n            const x = this.p5.lerp(x1, x2, n) + offset.x;\n            const y = this.p5.lerp(y1, y2, n) + offset.y;\n            (0, $aYfvi.pushpop)(this.p5, ()=>{\n                this.p5.translate(x, y);\n                this.p5.rotate(line_angle + this.p5.TWO_PI * this.jitter(this.props.angle_jitter));\n                const s = stamp_size / this.props.stamp.size;\n                this.p5.scale(s, s);\n                this.props.stamp.draw(this.p5);\n            });\n            remaining_len -= stamp_size * Math.max(0.1, this.props.spacing);\n        }\n    }\n    jitter(range) {\n        const h = range * 0.5;\n        return this.p5.random(-h, h);\n    }\n    position_jitter(line_angle, stamp_size) {\n        const angle = line_angle + this.p5.HALF_PI;\n        const r = stamp_size * this.jitter(this.props.position_jitter);\n        return {\n            x: Math.cos(angle) * r,\n            y: Math.sin(angle) * r\n        };\n    }\n}\n\n\nnew (0, $7vzAp.Page)(\"Pen\", (p5)=>{\n    const sketch = new (0, $jDwty.Sketch)(p5, {\n        width: 800,\n        height: 1000,\n        margin: p5.random(25, 200)\n    });\n    const { w: w, h: h, scene: scene } = sketch.layout;\n    const ink_pen = new (0, $ef2c7adfdc7db0da$export$59bc2e3533b384a0)(p5, {\n        size_jitter: 0.5,\n        position_jitter: 0.25,\n        angle_jitter: 0.1,\n        spacing: 0.25,\n        stamp: {\n            draw: (p5)=>{\n                p5.rectMode(p5.CENTER);\n                p5.noStroke();\n                p5.fill(0, 128);\n                p5.rect(0, 0, 50, 100);\n                p5.fill(0, 228);\n                p5.rect(0, 0, 100, 25);\n                if (p5.random() > 0.99) {\n                    p5.scale(2, 2);\n                    p5.fill(0, 128);\n                    p5.rect(0, 0, 50, 100);\n                    p5.fill(0, 228);\n                    p5.rect(0, 0, 100, 25);\n                    if (p5.random() > 0.9) {\n                        p5.scale(2, 2);\n                        p5.fill(0, 128);\n                        p5.rect(0, 0, 50, 100);\n                        p5.fill(0, 228);\n                        p5.rect(0, 0, 100, 25);\n                    }\n                }\n            },\n            size: 100\n        }\n    });\n    p5.preload = ()=>sketch.assets.load_special_elite();\n    p5.setup = ()=>p5.createCanvas(w, h);\n    p5.mouseClicked = ()=>p5.redraw();\n    p5.draw = ()=>{\n        p5.background(sketch.palette.old_paper());\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.noStroke();\n            p5.fill(0, 48);\n            p5.rect(scene.left, scene.top, scene.w, scene.h);\n        });\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.stroke(sketch.palette.gunmetal());\n            ink_pen.set_size(8);\n            ink_pen.line(scene.left, scene.center_y, p5.mouseX, p5.mouseY);\n        });\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.fill(sketch.palette.old_paper());\n            sketch.paint_margins();\n            p5.fill(sketch.palette.gunmetal());\n            p5.textFont(sketch.assets.load_special_elite());\n            sketch.draw_seed();\n        });\n        p5.noLoop();\n    };\n});\n\n\n//# sourceMappingURL=index.2ded72d7.js.map\n","import P5 from \"p5\";\nimport { get_current_seed } from \"../page\";\nimport { Palette } from \"../palette\";\nimport { Assets } from \"../assets\";\nimport { SceneParams, Layout, compute_layout, AxisAlignedRect } from \"./layout\";\n\nexport class Sketch {\n  public readonly layout: Layout;\n  public readonly palette: Palette;\n  public readonly assets: Assets;\n  private readonly p5: P5;\n\n  public constructor(p5: P5, params: SceneParams) {\n    this.layout = compute_layout(params);\n    this.palette = new Palette(p5);\n    this.assets = new Assets(p5);\n    this.p5 = p5;\n  }\n\n  /**\n   * Fills the sketch margins with rects.\n   *\n   * The caller must set the fill color prior to calling this method.\n   */\n  public paint_margins() {\n    this.p5.push();\n    this.p5.noStroke();\n    this.p5.rectMode(this.p5.CORNER);\n    // left side\n    this.p5.rect(\n      this.layout.left,\n      this.layout.top,\n      this.layout.margin,\n      this.layout.h\n    );\n    // right side\n    this.p5.rect(\n      this.layout.scene.right,\n      this.layout.top,\n      this.layout.margin,\n      this.layout.h\n    );\n    // top\n    this.p5.rect(\n      this.layout.scene.left,\n      this.layout.top,\n      this.layout.scene.w,\n      this.layout.margin\n    );\n    // bottom\n    this.p5.rect(\n      this.layout.scene.left,\n      this.layout.scene.bottom,\n      this.layout.scene.w,\n      this.layout.margin\n    );\n    this.p5.pop();\n  }\n\n  draw_seed() {\n    this.p5.push();\n    this.p5.textAlign(this.p5.RIGHT, this.p5.BOTTOM);\n    this.p5.noStroke();\n    this.p5.textSize(15);\n    const pad = this.p5.textSize() * 0.25;\n    this.p5.text(\n      `[id:${get_current_seed()}]`,\n      this.layout.right - pad,\n      this.layout.bottom - pad\n    );\n    this.p5.pop();\n  }\n}\n","import P5 from \"p5\";\n\nexport class Palette {\n  private p5: P5;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  old_paper(): P5.Color {\n    return this.p5.color(\"#E0C9A6\");\n  }\n\n  gunmetal(): P5.Color {\n    return this.p5.color(\"#2E2F2E\");\n  }\n}\n","import P5 from \"p5\";\n\nconst ASSET_PATH = \"/etching/assets\";\n\nfunction font_path(font_name: string): string {\n  return `${ASSET_PATH}/fonts/${font_name}`;\n}\n\n/**\n * Represents Assets in the assets folder.\n *\n * Individual assets are lazily loaded and can be preloaded synchronously in\n * a sketches preload() method if desired.\n */\nexport class Assets {\n  private p5: P5;\n  private special_elite: P5.Font | null = null;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */\n  load_special_elite(): P5.Font {\n    if (this.special_elite == null) {\n      this.special_elite = this.p5.loadFont(font_path(\"SpecialElite.ttf\"));\n    }\n    return this.special_elite;\n  }\n\n  load_image(asset_path: string): P5.Image {\n    return this.p5.loadImage(`${ASSET_PATH}/${asset_path}`);\n  }\n}\n","export interface AxisAlignedRect {\n  readonly w: number;\n  readonly h: number;\n  readonly left: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly top: number;\n  readonly center_x: number;\n  readonly center_y: number;\n}\n\nexport interface Layout extends AxisAlignedRect {\n  readonly em: number;\n  readonly margin: number;\n  readonly scene: AxisAlignedRect;\n}\n\nexport interface SceneParams {\n  width: number;\n  height: number;\n  margin: number;\n}\n\nexport function compute_layout(params: SceneParams): Layout {\n  let { width, height, margin } = params;\n  const aspect = width / height;\n  const margin_ratio = margin / Math.max(width, height);\n\n  // re-compute the width and height such that the height\n  // is constrained by the window height\n  if (height > window.innerHeight) {\n    height = window.innerHeight;\n    width = height * aspect;\n  }\n\n  if (width > window.innerWidth) {\n    width = window.innerWidth;\n    height = width / aspect;\n  }\n\n  margin = margin_ratio * Math.max(width, height);\n\n  return {\n    margin,\n    w: width,\n    h: height,\n    left: 0,\n    right: width,\n    top: 0,\n    bottom: height,\n    center_x: width / 2,\n    center_y: height / 2,\n    scene: {\n      w: width - margin * 2,\n      h: height - margin * 2,\n      left: margin,\n      top: margin,\n      right: width - margin,\n      bottom: height - margin,\n      center_x: width / 2,\n      center_y: height / 2,\n    },\n    em: Math.min(width, height) / 50,\n  };\n}\n","import { Page } from \"~/src/lib/page\";\nimport { pushpop } from \"~/src/lib/p5_state\";\nimport { Sketch } from \"~/src/lib/sketch\";\nimport { Brush } from \"~/src/lib/brush\";\nimport P5 from \"p5\";\n\nnew Page(\"Pen\", (p5: P5) => {\n  const sketch = new Sketch(p5, {\n    width: 800,\n    height: 1000,\n    margin: p5.random(25, 200),\n  });\n  const { w, h, scene } = sketch.layout;\n  const ink_pen = new Brush(p5, {\n    size_jitter: 0.5,\n    position_jitter: 0.25,\n    angle_jitter: 0.1,\n    spacing: 0.25,\n    stamp: {\n      draw: (p5: P5) => {\n        p5.rectMode(p5.CENTER);\n\n        p5.noStroke();\n        p5.fill(0, 128);\n        p5.rect(0, 0, 50, 100);\n\n        p5.fill(0, 228);\n        p5.rect(0, 0, 100, 25);\n\n        if (p5.random() > 0.99) {\n          p5.scale(2, 2);\n          p5.fill(0, 128);\n          p5.rect(0, 0, 50, 100);\n\n          p5.fill(0, 228);\n          p5.rect(0, 0, 100, 25);\n\n          if (p5.random() > 0.9) {\n            p5.scale(2, 2);\n            p5.fill(0, 128);\n            p5.rect(0, 0, 50, 100);\n\n            p5.fill(0, 228);\n            p5.rect(0, 0, 100, 25);\n          }\n        }\n      },\n      size: 100,\n    },\n  });\n\n  p5.preload = () => sketch.assets.load_special_elite();\n  p5.setup = () => p5.createCanvas(w, h);\n  p5.mouseClicked = () => p5.redraw();\n\n  p5.draw = () => {\n    p5.background(sketch.palette.old_paper());\n\n    pushpop(p5, () => {\n      p5.noStroke();\n      p5.fill(0, 48);\n      p5.rect(scene.left, scene.top, scene.w, scene.h);\n    });\n\n    pushpop(p5, () => {\n      p5.stroke(sketch.palette.gunmetal());\n      ink_pen.set_size(8);\n      ink_pen.line(scene.left, scene.center_y, p5.mouseX, p5.mouseY);\n    });\n\n    pushpop(p5, () => {\n      p5.fill(sketch.palette.old_paper());\n      sketch.paint_margins();\n\n      p5.fill(sketch.palette.gunmetal());\n      p5.textFont(sketch.assets.load_special_elite());\n      sketch.draw_seed();\n    });\n\n    p5.noLoop();\n  };\n});\n\nexport {};\n","import P5 from \"p5\";\nimport { pushpop } from \"./p5_state\";\n\n/**\n * Brushes draw repeated stamps to create strokes on the canvas.\n */\nexport interface Stamp {\n  /**\n   * Draw a single brush stamp centered at position 0, 0.\n   * @param p5 the P5 library instance.\n   */\n  draw: (p5: P5) => void;\n\n  /**\n   * The characteristic size of the stamp.\n   *\n   * If the stamp is a perfect circle, then the size would be the diameter\n   * of that circle.\n   */\n  readonly size: number;\n}\n\nexport interface BrushProps {\n  /**\n   * The brush stamp to use.\n   */\n  stamp: Stamp;\n\n  /**\n   * A number in the range [0.1, 1] that controls spacing between stamps as a\n   * percentage of brush size.\n   */\n  spacing: number;\n\n  /**\n   * A number in the range [0, 1] that controls how much the brush size changes\n   * between stamps as a % of brush size.\n   */\n  size_jitter: number;\n\n  /**\n   * A number in the range [0, 1] that controls how much the stamp position\n   * changes between stamps as a % of brush size.\n   */\n  position_jitter: number;\n\n  /**\n   * A number in the range [0, 1] that controls how much the stamp angle\n   * varies between each stamp.\n   */\n  angle_jitter: number;\n}\n\nexport class Brush {\n  private readonly p5: P5;\n  private readonly props: BrushProps;\n  private brush_size: number;\n\n  constructor(p5: P5, props: BrushProps) {\n    this.p5 = p5;\n    this.props = props;\n    this.brush_size = 1;\n  }\n\n  public set_size(brush_size: number) {\n    this.brush_size = brush_size;\n  }\n\n  public line(x1: number, y1: number, x2: number, y2: number) {\n    const line_angle = Math.atan2(y2 - y1, x2 - x1);\n    const max_len = this.p5.dist(x1, y1, x2, y2);\n    let remaining_len = max_len;\n    while (remaining_len >= 0) {\n      const n = 1.0 - remaining_len / max_len;\n      const stamp_size =\n        this.brush_size * (1 + this.jitter(this.props.size_jitter));\n\n      const offset = this.position_jitter(line_angle, stamp_size);\n      const x = this.p5.lerp(x1, x2, n) + offset.x;\n      const y = this.p5.lerp(y1, y2, n) + offset.y;\n\n      pushpop(this.p5, () => {\n        this.p5.translate(x, y);\n        this.p5.rotate(\n          line_angle + this.p5.TWO_PI * this.jitter(this.props.angle_jitter)\n        );\n        const s = stamp_size / this.props.stamp.size;\n        this.p5.scale(s, s);\n        this.props.stamp.draw(this.p5);\n      });\n\n      remaining_len -= stamp_size * Math.max(0.1, this.props.spacing);\n    }\n  }\n\n  private jitter(range: number): number {\n    const h = range * 0.5;\n    return this.p5.random(-h, h);\n  }\n\n  private position_jitter(\n    line_angle: number,\n    stamp_size: number\n  ): { x: number; y: number } {\n    const angle = line_angle + this.p5.HALF_PI;\n    const r = stamp_size * this.jitter(this.props.position_jitter);\n    return {\n      x: Math.cos(angle) * r,\n      y: Math.sin(angle) * r,\n    };\n  }\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$ee4d6d24a0d6b1f4$export$361fce2090be193f","$7vzAp","$9DS0H","$7LI5f","$18izm","constructor","p5","params","layout","compute_layout","palette","Palette","assets","Assets","paint_margins","push","noStroke","rectMode","CORNER","rect","left","top","margin","h","scene","right","w","bottom","pop","draw_seed","textAlign","RIGHT","BOTTOM","textSize","pad","text","get_current_seed","$d0095abaf5e261c5$export$e2fbaa661ec19dbf","old_paper","color","gunmetal","$d64c2e6e79d64407$export$c8eca95e306f7116","$d64c2e6e79d64407$var$ASSET_PATH","special_elite","load_special_elite","loadFont","load_image","asset_path","loadImage","$7a93ed990456373c$export$e8aff8e43fab5f06","width","height","aspect","margin_ratio","Math","max","window","innerHeight","innerWidth","center_x","center_y","em","min","$aYfvi","$jDwty","$ef2c7adfdc7db0da$export$59bc2e3533b384a0","props","brush_size","set_size","line","x1","y1","x2","y2","line_angle","atan2","max_len","dist","remaining_len","stamp_size","jitter","size_jitter","offset","position_jitter","x","lerp","y","pushpop","translate","rotate","TWO_PI","angle_jitter","stamp","size","scale","draw","spacing","range","random","angle","HALF_PI","r","cos","sin","Page","sketch","Sketch","ink_pen","CENTER","fill","preload","setup","createCanvas","mouseClicked","redraw","background","stroke","mouseX","mouseY","textFont","noLoop"],"version":3,"file":"index.2ded72d7.js.map"}