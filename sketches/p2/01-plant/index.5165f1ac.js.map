{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,S,I,G,I,E,E,S,E,E,S,E,E,S,E,E,QCMO,OAAM,EAMX,YAAmB,CAAM,CAAE,CAAmB,CAAE,CAC9C,IAAI,CAAC,MAAM,CAAG,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,GAC7B,IAAI,CAAC,OAAO,CAAG,IAAI,EAAA,OAAM,CAAE,GAC3B,IAAI,CAAC,MAAM,CAAG,IAAI,EAAA,MAAK,CAAE,GACzB,IAAI,CAAC,EAAE,CAAG,CACZ,CAOO,eAAgB,CACrB,IAAI,CAAC,EAAE,CAAC,IAAI,GACZ,IAAI,CAAC,EAAE,CAAC,QAAQ,GAChB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAE/B,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,CAAC,EAGf,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,CAAC,EAGf,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAGpB,IAAI,CAAC,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","sources":["<anon>","src/lib/sketch/index.ts","src/lib/palette.ts","src/lib/assets.ts","src/lib/sketch/layout.ts","src/lib/pen.ts","src/sketches/p2/01_plant/index.ts","src/sketches/p2/01_plant/blossom.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire98dc\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire98dc\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jDwty\", function(module, exports) {\n\n$parcel$export(module.exports, \"Sketch\", () => $ee4d6d24a0d6b1f4$export$361fce2090be193f);\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\n\nvar $9DS0H = parcelRequire(\"9DS0H\");\n\nvar $7LI5f = parcelRequire(\"7LI5f\");\n\nvar $18izm = parcelRequire(\"18izm\");\nclass $ee4d6d24a0d6b1f4$export$361fce2090be193f {\n    constructor(p5, params){\n        this.layout = (0, $18izm.compute_layout)(params);\n        this.palette = new (0, $9DS0H.Palette)(p5);\n        this.assets = new (0, $7LI5f.Assets)(p5);\n        this.p5 = p5;\n    }\n    /**\n   * Fills the sketch margins with rects.\n   *\n   * The caller must set the fill color prior to calling this method.\n   */ paint_margins() {\n        this.p5.push();\n        this.p5.noStroke();\n        this.p5.rectMode(this.p5.CORNER);\n        // left side\n        this.p5.rect(this.layout.left, this.layout.top, this.layout.margin, this.layout.h);\n        // right side\n        this.p5.rect(this.layout.scene.right, this.layout.top, this.layout.margin, this.layout.h);\n        // top\n        this.p5.rect(this.layout.scene.left, this.layout.top, this.layout.scene.w, this.layout.margin);\n        // bottom\n        this.p5.rect(this.layout.scene.left, this.layout.scene.bottom, this.layout.scene.w, this.layout.margin);\n        this.p5.pop();\n    }\n    draw_seed() {\n        this.p5.push();\n        this.p5.textAlign(this.p5.RIGHT, this.p5.BOTTOM);\n        this.p5.noStroke();\n        this.p5.textSize(15);\n        const pad = this.p5.textSize() * 0.25;\n        this.p5.text(`[id:${(0, $7vzAp.get_current_seed)()}]`, this.layout.right - pad, this.layout.bottom - pad);\n        this.p5.pop();\n    }\n}\n\n});\nparcelRegister(\"9DS0H\", function(module, exports) {\n\n$parcel$export(module.exports, \"Palette\", () => $d0095abaf5e261c5$export$e2fbaa661ec19dbf);\nclass $d0095abaf5e261c5$export$e2fbaa661ec19dbf {\n    constructor(p5){\n        this.p5 = p5;\n    }\n    old_paper() {\n        return this.p5.color(\"#E0C9A6\");\n    }\n    gunmetal() {\n        return this.p5.color(\"#2E2F2E\");\n    }\n}\n\n});\n\nparcelRegister(\"7LI5f\", function(module, exports) {\n\n$parcel$export(module.exports, \"Assets\", () => $d64c2e6e79d64407$export$c8eca95e306f7116);\nconst $d64c2e6e79d64407$var$ASSET_PATH = \"/etching/assets\";\nfunction $d64c2e6e79d64407$var$font_path(font_name) {\n    return `${$d64c2e6e79d64407$var$ASSET_PATH}/fonts/${font_name}`;\n}\nclass $d64c2e6e79d64407$export$c8eca95e306f7116 {\n    constructor(p5){\n        this.special_elite = null;\n        this.p5 = p5;\n    }\n    /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */ load_special_elite() {\n        if (this.special_elite == null) this.special_elite = this.p5.loadFont($d64c2e6e79d64407$var$font_path(\"SpecialElite.ttf\"));\n        return this.special_elite;\n    }\n    load_image(asset_path) {\n        return this.p5.loadImage(`${$d64c2e6e79d64407$var$ASSET_PATH}/${asset_path}`);\n    }\n}\n\n});\n\nparcelRegister(\"18izm\", function(module, exports) {\n\n$parcel$export(module.exports, \"compute_layout\", () => $7a93ed990456373c$export$e8aff8e43fab5f06);\nfunction $7a93ed990456373c$export$e8aff8e43fab5f06(params) {\n    let { width: width, height: height, margin: margin } = params;\n    const aspect = width / height;\n    const margin_ratio = margin / Math.max(width, height);\n    // re-compute the width and height such that the height\n    // is constrained by the window height\n    if (height > window.innerHeight) {\n        height = window.innerHeight;\n        width = height * aspect;\n    }\n    if (width > window.innerWidth) {\n        width = window.innerWidth;\n        height = width / aspect;\n    }\n    margin = margin_ratio * Math.max(width, height);\n    return {\n        margin: margin,\n        w: width,\n        h: height,\n        left: 0,\n        right: width,\n        top: 0,\n        bottom: height,\n        center_x: width / 2,\n        center_y: height / 2,\n        scene: {\n            w: width - margin * 2,\n            h: height - margin * 2,\n            left: margin,\n            top: margin,\n            right: width - margin,\n            bottom: height - margin,\n            center_x: width / 2,\n            center_y: height / 2\n        },\n        em: Math.min(width, height) / 50\n    };\n}\n\n});\n\n\nparcelRegister(\"l8luy\", function(module, exports) {\n\n$parcel$export(module.exports, \"Pen\", () => $f8e6ade27e71cff3$export$54c11739735d3a0a);\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\nclass $f8e6ade27e71cff3$export$54c11739735d3a0a {\n    constructor(p5, props){\n        this.p5 = p5;\n        this.props = props;\n    }\n    line(x1, y1, x2, y2) {\n        (0, $aYfvi.pushpop)(this.p5, ()=>{\n            const max_len = this.p5.dist(x1, y1, x2, y2);\n            let remaining_len = max_len;\n            while(remaining_len >= 0){\n                const n = 1.0 - remaining_len / max_len;\n                const point_size = this.props.weight * this.p5.random(1 - this.props.jitter, 1 + this.props.jitter);\n                this.p5.strokeWeight(point_size);\n                this.p5.point(this.p5.lerp(x1, x2, n) + this.p5.random(-point_size, point_size) * this.props.jitter * 0.3, this.p5.lerp(y1, y2, n) + this.p5.random(-point_size, point_size) * this.props.jitter * 0.3);\n                remaining_len -= point_size * 0.5;\n            }\n        });\n    }\n    bezier(x1, y1, c1x, c1y, c2x, c2y, x2, y2) {\n        (0, $aYfvi.pushpop)(this.p5, ()=>{\n            const subdivisions = 30;\n            for(let i = 0; i < subdivisions; i++){\n                const n = i / subdivisions;\n                const n_next = (i + 1) / subdivisions;\n                this.line(this.p5.bezierPoint(x1, c1x, c2x, x2, n), this.p5.bezierPoint(y1, c1y, c2y, y2, n), this.p5.bezierPoint(x1, c1x, c2x, x2, n_next), this.p5.bezierPoint(y1, c1y, c2y, y2, n_next));\n            }\n        });\n    }\n}\n\n});\n\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\n\nvar $jDwty = parcelRequire(\"jDwty\");\n\nvar $aYfvi = parcelRequire(\"aYfvi\");\nfunction $235f7b10bad6e74e$export$777114197066248f(p5, params) {\n    const y_start = 10;\n    const y_end = 150;\n    const size = 150;\n    const c1 = {\n        x: p5.random(70, 90),\n        y: p5.random(30, 60)\n    };\n    const c2 = {\n        x: p5.random(c1.x / 10, c1.x / 5),\n        y: p5.random(65, 120)\n    };\n    // fill in the petal\n    (0, $aYfvi.pushpop)(p5, ()=>{\n        p5.fill(params.petal_color);\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.noStroke();\n            p5.bezier(0, y_start, c1.x, c1.y, c2.x, c2.y, 0, y_end);\n            p5.bezier(0, y_start, -c1.x, c1.y, -c2.x, c2.y, 0, y_end);\n        });\n        params.thick_pen.bezier(0, y_start, c1.x, c1.y, c2.x, c2.y, 0, y_end);\n        params.thick_pen.bezier(0, y_start, -c1.x, c1.y, -c2.x, c2.y, 0, y_end);\n    });\n    // Detail Lines\n    (0, $aYfvi.pushpop)(p5, ()=>{\n        p5.noFill();\n        p5.strokeWeight(1);\n        // center line\n        params.detail_pen.bezier(0, y_start + p5.random(size / 4), p5.random(-5, 5), y_start + size * 0.3, p5.random(-5, 5), y_start + size * 0.6, 0, y_end - p5.random(size / 4));\n        // petal crease lines\n        const lines = p5.random(2, 4);\n        for(let i = 2; i <= lines; i++){\n            const y_start_offset = p5.random(size / 4);\n            const y_end_offset = p5.random(size / 4);\n            params.detail_pen.bezier(p5.random(0, 10), y_start + y_start_offset, c1.x / i, c1.y, c2.x / i, c2.y, p5.random(0, 10), y_end - y_end_offset);\n            params.detail_pen.bezier(-p5.random(0, 10), y_start + y_start_offset, -c1.x / i, c1.y, -c2.x / i, c2.y, -p5.random(0, 10), y_end - y_end_offset);\n        }\n    });\n}\nfunction $235f7b10bad6e74e$export$7f28f0747c35ca4d(p5, params) {\n    const { x: x, y: y, size: size } = params;\n    (0, $aYfvi.pushpop)(p5, ()=>{\n        p5.translate(x, y);\n        const scale = size / 300;\n        p5.scale(scale, scale);\n        p5.stroke(params.stroke_color);\n        const petals = params.petal_count || p5.ceil(p5.random(4, 9));\n        const step = p5.TWO_PI / petals;\n        const offset = p5.random(p5.PI * 0.5);\n        for(let i = 0; i < petals; i++)(0, $aYfvi.pushpop)(p5, ()=>{\n            p5.rotate(offset + step * i + p5.random(-step / 4, step / 4));\n            $235f7b10bad6e74e$export$777114197066248f(p5, {\n                petal_color: params.petal_color,\n                detail_pen: params.detail_pen,\n                thick_pen: params.thick_pen\n            });\n        });\n        // Draw the center of the blossom.\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.noStroke();\n            p5.fill(params.stroke_color);\n            p5.circle(0, 0, 40);\n        });\n    });\n}\n\n\n\nvar $l8luy = parcelRequire(\"l8luy\");\nfunction $fef49e4fdf8b1e87$var$plant(p5, level, params) {\n    if (level >= params.max_level) {\n        (0, $235f7b10bad6e74e$export$7f28f0747c35ca4d)(p5, {\n            x: 0,\n            y: 0,\n            size: p5.random(250, 310),\n            stroke_color: params.ink_color,\n            petal_color: params.petal_color,\n            petal_count: 6,\n            detail_pen: params.detail_pen,\n            thick_pen: params.petal_pen\n        });\n        return;\n    }\n    (0, $aYfvi.pushpop)(p5, ()=>{\n        const stem_length = 50;\n        const bottom_width = 3;\n        const top_width = 2;\n        // draw the stem\n        p5.noStroke();\n        p5.fill(params.stem_color);\n        p5.beginShape();\n        p5.vertex(bottom_width, 0);\n        p5.vertex(top_width, stem_length);\n        p5.vertex(-top_width, stem_length);\n        p5.vertex(-bottom_width, 0);\n        p5.endShape();\n        // draw the stem outline\n        p5.stroke(params.ink_color);\n        p5.strokeWeight(3);\n        params.thick_pen.line(3, 0, 2.5, stem_length);\n        params.thick_pen.line(-3, 0, -2.5, stem_length);\n        if (level < 3 && params.max_branches > 0) {\n            if (p5.random() > 0.75) {\n                params.max_branches -= 1;\n                (0, $aYfvi.pushpop)(p5, ()=>{\n                    p5.translate(0, stem_length);\n                    p5.rotate(p5.PI * p5.random(-0.25, 0.25));\n                    p5.scale(0.9, 0.9);\n                    $fef49e4fdf8b1e87$var$plant(p5, level + 1, params);\n                });\n            }\n        }\n        // draw the next stem segment\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.translate(0, stem_length);\n            p5.rotate(p5.PI * p5.random(-0.15, 0.15));\n            p5.scale(0.9, 0.9);\n            $fef49e4fdf8b1e87$var$plant(p5, level + 1, params);\n        });\n    });\n}\nnew (0, $7vzAp.Page)(\"Plant\", (p5)=>{\n    const sketch = new (0, $jDwty.Sketch)(p5, {\n        width: 800,\n        height: 1000,\n        margin: 50\n    });\n    const { w: w, h: h, scene: scene } = sketch.layout;\n    const thick_pen = new (0, $l8luy.Pen)(p5, {\n        jitter: 0.15,\n        weight: 3\n    });\n    const petal_pen = new (0, $l8luy.Pen)(p5, {\n        jitter: 0.5,\n        weight: 2.3\n    });\n    const detail_pen = new (0, $l8luy.Pen)(p5, {\n        jitter: 0.9,\n        weight: 0.8\n    });\n    p5.colorMode(p5.HSL);\n    const flower_colors = [\n        p5.color(51, 75, 51),\n        p5.color(212, 30, 60),\n        p5.color(289, 15, 55),\n        p5.color(332, 30, 65)\n    ];\n    p5.preload = ()=>sketch.assets.load_special_elite();\n    p5.setup = ()=>p5.createCanvas(w, h);\n    p5.draw = ()=>{\n        p5.background(sketch.palette.old_paper());\n        const horizon = scene.bottom - scene.h * 0.3;\n        // draw a flower\n        const offset = scene.w * 0.25;\n        const flower_count = p5.floor(p5.random(1, 8));\n        for(let i = 0; i < flower_count; i++)(0, $aYfvi.pushpop)(p5, ()=>{\n            p5.translate(p5.random(scene.left + offset, scene.right - offset), horizon);\n            p5.rotate(p5.PI * p5.random(-0.1, 0.1));\n            const s = p5.random(0.8, 1.1);\n            p5.scale(s, -s);\n            $fef49e4fdf8b1e87$var$plant(p5, 0, {\n                max_level: 7,\n                stem_color: sketch.palette.old_paper(),\n                ink_color: sketch.palette.gunmetal(),\n                max_branches: 4,\n                petal_color: p5.random(flower_colors),\n                thick_pen: thick_pen,\n                detail_pen: detail_pen,\n                petal_pen: petal_pen\n            });\n        });\n        // draw the ground\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.strokeWeight(3);\n            p5.stroke(sketch.palette.gunmetal());\n            thick_pen.line(scene.left, horizon, scene.right, horizon);\n        });\n        // draw the seed\n        (0, $aYfvi.pushpop)(p5, ()=>{\n            p5.fill(sketch.palette.old_paper());\n            sketch.paint_margins();\n            p5.fill(sketch.palette.gunmetal());\n            p5.textFont(sketch.assets.load_special_elite());\n            sketch.draw_seed();\n        });\n        p5.noLoop();\n    };\n});\n\n\n//# sourceMappingURL=index.5165f1ac.js.map\n","import P5 from \"p5\";\nimport { get_current_seed } from \"../page\";\nimport { Palette } from \"../palette\";\nimport { Assets } from \"../assets\";\nimport { SceneParams, Layout, compute_layout, AxisAlignedRect } from \"./layout\";\n\nexport class Sketch {\n  public readonly layout: Layout;\n  public readonly palette: Palette;\n  public readonly assets: Assets;\n  private readonly p5: P5;\n\n  public constructor(p5: P5, params: SceneParams) {\n    this.layout = compute_layout(params);\n    this.palette = new Palette(p5);\n    this.assets = new Assets(p5);\n    this.p5 = p5;\n  }\n\n  /**\n   * Fills the sketch margins with rects.\n   *\n   * The caller must set the fill color prior to calling this method.\n   */\n  public paint_margins() {\n    this.p5.push();\n    this.p5.noStroke();\n    this.p5.rectMode(this.p5.CORNER);\n    // left side\n    this.p5.rect(\n      this.layout.left,\n      this.layout.top,\n      this.layout.margin,\n      this.layout.h\n    );\n    // right side\n    this.p5.rect(\n      this.layout.scene.right,\n      this.layout.top,\n      this.layout.margin,\n      this.layout.h\n    );\n    // top\n    this.p5.rect(\n      this.layout.scene.left,\n      this.layout.top,\n      this.layout.scene.w,\n      this.layout.margin\n    );\n    // bottom\n    this.p5.rect(\n      this.layout.scene.left,\n      this.layout.scene.bottom,\n      this.layout.scene.w,\n      this.layout.margin\n    );\n    this.p5.pop();\n  }\n\n  draw_seed() {\n    this.p5.push();\n    this.p5.textAlign(this.p5.RIGHT, this.p5.BOTTOM);\n    this.p5.noStroke();\n    this.p5.textSize(15);\n    const pad = this.p5.textSize() * 0.25;\n    this.p5.text(\n      `[id:${get_current_seed()}]`,\n      this.layout.right - pad,\n      this.layout.bottom - pad\n    );\n    this.p5.pop();\n  }\n}\n","import P5 from \"p5\";\n\nexport class Palette {\n  private p5: P5;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  old_paper(): P5.Color {\n    return this.p5.color(\"#E0C9A6\");\n  }\n\n  gunmetal(): P5.Color {\n    return this.p5.color(\"#2E2F2E\");\n  }\n}\n","import P5 from \"p5\";\n\nconst ASSET_PATH = \"/etching/assets\";\n\nfunction font_path(font_name: string): string {\n  return `${ASSET_PATH}/fonts/${font_name}`;\n}\n\n/**\n * Represents Assets in the assets folder.\n *\n * Individual assets are lazily loaded and can be preloaded synchronously in\n * a sketches preload() method if desired.\n */\nexport class Assets {\n  private p5: P5;\n  private special_elite: P5.Font | null = null;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  /**\n   * Lazily loads the SpecialElite font from the assets folder.\n   *\n   * Call this once in preload to ensure the font is loaded in your sketch.\n   *\n   * @returns The P5 font instance for the SpecialElite font face.\n   */\n  load_special_elite(): P5.Font {\n    if (this.special_elite == null) {\n      this.special_elite = this.p5.loadFont(font_path(\"SpecialElite.ttf\"));\n    }\n    return this.special_elite;\n  }\n\n  load_image(asset_path: string): P5.Image {\n    return this.p5.loadImage(`${ASSET_PATH}/${asset_path}`);\n  }\n}\n","export interface AxisAlignedRect {\n  readonly w: number;\n  readonly h: number;\n  readonly left: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly top: number;\n  readonly center_x: number;\n  readonly center_y: number;\n}\n\nexport interface Layout extends AxisAlignedRect {\n  readonly em: number;\n  readonly margin: number;\n  readonly scene: AxisAlignedRect;\n}\n\nexport interface SceneParams {\n  width: number;\n  height: number;\n  margin: number;\n}\n\nexport function compute_layout(params: SceneParams): Layout {\n  let { width, height, margin } = params;\n  const aspect = width / height;\n  const margin_ratio = margin / Math.max(width, height);\n\n  // re-compute the width and height such that the height\n  // is constrained by the window height\n  if (height > window.innerHeight) {\n    height = window.innerHeight;\n    width = height * aspect;\n  }\n\n  if (width > window.innerWidth) {\n    width = window.innerWidth;\n    height = width / aspect;\n  }\n\n  margin = margin_ratio * Math.max(width, height);\n\n  return {\n    margin,\n    w: width,\n    h: height,\n    left: 0,\n    right: width,\n    top: 0,\n    bottom: height,\n    center_x: width / 2,\n    center_y: height / 2,\n    scene: {\n      w: width - margin * 2,\n      h: height - margin * 2,\n      left: margin,\n      top: margin,\n      right: width - margin,\n      bottom: height - margin,\n      center_x: width / 2,\n      center_y: height / 2,\n    },\n    em: Math.min(width, height) / 50,\n  };\n}\n","import P5 from \"p5\";\nimport { pushpop } from \"./p5_state\";\n\nexport interface PenProps {\n  jitter: number;\n  weight: number;\n}\n\nexport class Pen {\n  private p5: P5;\n  private readonly props: PenProps;\n\n  constructor(p5: P5, props: PenProps) {\n    this.p5 = p5;\n    this.props = props;\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number) {\n    pushpop(this.p5, () => {\n      const max_len = this.p5.dist(x1, y1, x2, y2);\n      let remaining_len = max_len;\n      while (remaining_len >= 0) {\n        const n = 1.0 - remaining_len / max_len;\n        const point_size =\n          this.props.weight *\n          this.p5.random(1 - this.props.jitter, 1 + this.props.jitter);\n\n        this.p5.strokeWeight(point_size);\n        this.p5.point(\n          this.p5.lerp(x1, x2, n) +\n            this.p5.random(-point_size, point_size) * this.props.jitter * 0.3,\n          this.p5.lerp(y1, y2, n) +\n            this.p5.random(-point_size, point_size) * this.props.jitter * 0.3\n        );\n\n        remaining_len -= point_size * 0.5;\n      }\n    });\n  }\n\n  bezier(\n    x1: number,\n    y1: number,\n    c1x: number,\n    c1y: number,\n    c2x: number,\n    c2y: number,\n    x2: number,\n    y2: number\n  ) {\n    pushpop(this.p5, () => {\n      const subdivisions = 30;\n      for (let i = 0; i < subdivisions; i++) {\n        const n = i / subdivisions;\n        const n_next = (i + 1) / subdivisions;\n\n        this.line(\n          this.p5.bezierPoint(x1, c1x, c2x, x2, n),\n          this.p5.bezierPoint(y1, c1y, c2y, y2, n),\n          this.p5.bezierPoint(x1, c1x, c2x, x2, n_next),\n          this.p5.bezierPoint(y1, c1y, c2y, y2, n_next)\n        );\n      }\n    });\n  }\n}\n","import { Page } from \"~/src/lib/page\";\nimport { pushpop } from \"~/src/lib/p5_state\";\nimport { Sketch } from \"~/src/lib/sketch\";\nimport { blossom } from \"./blossom\";\nimport { Pen } from \"~/src/lib/pen\";\nimport P5 from \"p5\";\n\ninterface PlantParams {\n  max_level: number;\n  stem_color: P5.Color;\n  ink_color: P5.Color;\n  max_branches: number;\n  petal_color: P5.Color;\n  thick_pen: Pen;\n  petal_pen: Pen;\n  detail_pen: Pen;\n}\n\nfunction plant(p5: P5, level: number, params: PlantParams) {\n  if (level >= params.max_level) {\n    blossom(p5, {\n      x: 0,\n      y: 0,\n      size: p5.random(250, 310),\n      stroke_color: params.ink_color,\n      petal_color: params.petal_color,\n      petal_count: 6,\n      detail_pen: params.detail_pen,\n      thick_pen: params.petal_pen,\n    });\n    return;\n  }\n\n  pushpop(p5, () => {\n    const stem_length = 50;\n    const bottom_width = 3;\n    const top_width = 2;\n\n    // draw the stem\n    p5.noStroke();\n    p5.fill(params.stem_color);\n    p5.beginShape();\n    p5.vertex(bottom_width, 0);\n    p5.vertex(top_width, stem_length);\n    p5.vertex(-top_width, stem_length);\n    p5.vertex(-bottom_width, 0);\n    p5.endShape();\n\n    // draw the stem outline\n    p5.stroke(params.ink_color);\n    p5.strokeWeight(3);\n    params.thick_pen.line(3, 0, 2.5, stem_length);\n    params.thick_pen.line(-3, 0, -2.5, stem_length);\n\n    if (level < 3 && params.max_branches > 0) {\n      if (p5.random() > 0.75) {\n        params.max_branches -= 1;\n        pushpop(p5, () => {\n          p5.translate(0, stem_length);\n          p5.rotate(p5.PI * p5.random(-0.25, 0.25));\n          p5.scale(0.9, 0.9);\n          plant(p5, level + 1, params);\n        });\n      }\n    }\n\n    // draw the next stem segment\n    pushpop(p5, () => {\n      p5.translate(0, stem_length);\n      p5.rotate(p5.PI * p5.random(-0.15, 0.15));\n      p5.scale(0.9, 0.9);\n      plant(p5, level + 1, params);\n    });\n  });\n}\n\nnew Page(\"Plant\", (p5: P5) => {\n  const sketch = new Sketch(p5, {\n    width: 800,\n    height: 1000,\n    margin: 50,\n  });\n  const { w, h, scene } = sketch.layout;\n  const thick_pen = new Pen(p5, { jitter: 0.15, weight: 3 });\n  const petal_pen = new Pen(p5, { jitter: 0.5, weight: 2.3 });\n  const detail_pen = new Pen(p5, { jitter: 0.9, weight: 0.8 });\n\n  p5.colorMode(p5.HSL);\n  const flower_colors = [\n    p5.color(51, 75, 51),\n    p5.color(212, 30, 60),\n    p5.color(289, 15, 55),\n    p5.color(332, 30, 65),\n  ];\n\n  p5.preload = () => sketch.assets.load_special_elite();\n  p5.setup = () => p5.createCanvas(w, h);\n\n  p5.draw = () => {\n    p5.background(sketch.palette.old_paper());\n\n    const horizon = scene.bottom - scene.h * 0.3;\n\n    // draw a flower\n    const offset = scene.w * 0.25;\n    const flower_count = p5.floor(p5.random(1, 8));\n    for (let i = 0; i < flower_count; i++) {\n      pushpop(p5, () => {\n        p5.translate(\n          p5.random(scene.left + offset, scene.right - offset),\n          horizon\n        );\n        p5.rotate(p5.PI * p5.random(-0.1, 0.1));\n        const s = p5.random(0.8, 1.1);\n        p5.scale(s, -s);\n        plant(p5, 0, {\n          max_level: 7,\n          stem_color: sketch.palette.old_paper(),\n          ink_color: sketch.palette.gunmetal(),\n          max_branches: 4,\n          petal_color: p5.random(flower_colors),\n          thick_pen,\n          detail_pen,\n          petal_pen,\n        });\n      });\n    }\n\n    // draw the ground\n    pushpop(p5, () => {\n      p5.strokeWeight(3);\n      p5.stroke(sketch.palette.gunmetal());\n      thick_pen.line(scene.left, horizon, scene.right, horizon);\n    });\n\n    // draw the seed\n    pushpop(p5, () => {\n      p5.fill(sketch.palette.old_paper());\n      sketch.paint_margins();\n      p5.fill(sketch.palette.gunmetal());\n      p5.textFont(sketch.assets.load_special_elite());\n      sketch.draw_seed();\n    });\n\n    p5.noLoop();\n  };\n});\n\nexport {};\n","import P5 from \"p5\";\nimport { pushpop } from \"~src/lib/p5_state\";\n\nimport { Pen } from \"~/src/lib/pen\";\n\nexport interface PetalParams {\n  petal_color: P5.Color;\n  thick_pen: Pen;\n  detail_pen: Pen;\n}\n\n/**\n * Draws a single petal.\n *\n * Petals are 150 pixels tall starting from y=0 and ending at y = 150.\n * Orientation and size can be controlled by calling p5.rotate/translate/scale.\n */\nexport function petal(p5: P5, params: PetalParams) {\n  const y_start = 10;\n  const y_end = 150;\n  const size = 150;\n\n  const c1 = {\n    x: p5.random(70, 90),\n    y: p5.random(30, 60),\n  };\n  const c2 = {\n    x: p5.random(c1.x / 10, c1.x / 5),\n    y: p5.random(65, 120),\n  };\n\n  // fill in the petal\n  pushpop(p5, () => {\n    p5.fill(params.petal_color);\n    pushpop(p5, () => {\n      p5.noStroke();\n      p5.bezier(0, y_start, c1.x, c1.y, c2.x, c2.y, 0, y_end);\n      p5.bezier(0, y_start, -c1.x, c1.y, -c2.x, c2.y, 0, y_end);\n    });\n    params.thick_pen.bezier(0, y_start, c1.x, c1.y, c2.x, c2.y, 0, y_end);\n    params.thick_pen.bezier(0, y_start, -c1.x, c1.y, -c2.x, c2.y, 0, y_end);\n  });\n\n  // Detail Lines\n  pushpop(p5, () => {\n    p5.noFill();\n    p5.strokeWeight(1);\n\n    // center line\n    params.detail_pen.bezier(\n      0,\n      y_start + p5.random(size / 4),\n      p5.random(-5, 5),\n      y_start + size * 0.3,\n      p5.random(-5, 5),\n      y_start + size * 0.6,\n      0,\n      y_end - p5.random(size / 4)\n    );\n\n    // petal crease lines\n    const lines = p5.random(2, 4);\n    for (let i = 2; i <= lines; i++) {\n      const y_start_offset = p5.random(size / 4);\n      const y_end_offset = p5.random(size / 4);\n      params.detail_pen.bezier(\n        p5.random(0, 10),\n        y_start + y_start_offset,\n        c1.x / i,\n        c1.y,\n        c2.x / i,\n        c2.y,\n        p5.random(0, 10),\n        y_end - y_end_offset\n      );\n      params.detail_pen.bezier(\n        -p5.random(0, 10),\n        y_start + y_start_offset,\n        -c1.x / i,\n        c1.y,\n        -c2.x / i,\n        c2.y,\n        -p5.random(0, 10),\n        y_end - y_end_offset\n      );\n    }\n  });\n}\n\nexport interface BlossomParams {\n  x: number;\n  y: number;\n  size: number;\n  stroke_color: P5.Color;\n  petal_color: P5.Color;\n  petal_count?: number;\n  thick_pen: Pen;\n  detail_pen: Pen;\n}\n\n/**\n * Draws a procedurally-generated flower blossom.\n */\nexport function blossom(p5: P5, params: BlossomParams) {\n  const { x, y, size } = params;\n  pushpop(p5, () => {\n    p5.translate(x, y);\n    const scale = size / 300;\n    p5.scale(scale, scale);\n    p5.stroke(params.stroke_color);\n\n    const petals = params.petal_count || p5.ceil(p5.random(4, 9));\n    const step = p5.TWO_PI / petals;\n    const offset = p5.random(p5.PI * 0.5);\n    for (let i = 0; i < petals; i++) {\n      pushpop(p5, () => {\n        p5.rotate(offset + step * i + p5.random(-step / 4, step / 4));\n        petal(p5, {\n          petal_color: params.petal_color,\n          detail_pen: params.detail_pen,\n          thick_pen: params.thick_pen,\n        });\n      });\n    }\n\n    // Draw the center of the blossom.\n    pushpop(p5, () => {\n      p5.noStroke();\n      p5.fill(params.stroke_color);\n      p5.circle(0, 0, 40);\n    });\n  });\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$ee4d6d24a0d6b1f4$export$361fce2090be193f","$7vzAp","$9DS0H","$7LI5f","$18izm","constructor","p5","params","layout","compute_layout","palette","Palette","assets","Assets","paint_margins","push","noStroke","rectMode","CORNER","rect","left","top","margin","h","scene","right","w","bottom","pop","draw_seed","textAlign","RIGHT","BOTTOM","textSize","pad","text","get_current_seed","$d0095abaf5e261c5$export$e2fbaa661ec19dbf","old_paper","color","gunmetal","$d64c2e6e79d64407$export$c8eca95e306f7116","$d64c2e6e79d64407$var$ASSET_PATH","special_elite","load_special_elite","loadFont","load_image","asset_path","loadImage","$7a93ed990456373c$export$e8aff8e43fab5f06","width","height","aspect","margin_ratio","Math","max","window","innerHeight","innerWidth","center_x","center_y","em","min","$f8e6ade27e71cff3$export$54c11739735d3a0a","$aYfvi","props","line","x1","y1","x2","y2","pushpop","max_len","dist","remaining_len","point_size","weight","random","jitter","strokeWeight","point","lerp","bezier","c1x","c1y","c2x","c2y","i","n_next","bezierPoint","$jDwty","$l8luy","Page","sketch","Sketch","thick_pen","Pen","petal_pen","detail_pen","colorMode","HSL","flower_colors","preload","setup","createCanvas","draw","background","horizon","offset","flower_count","floor","translate","rotate","PI","scale","$fef49e4fdf8b1e87$var$plant","level","max_level","x","y","size","stroke","stroke_color","petals","petal_count","ceil","step","TWO_PI","$235f7b10bad6e74e$export$777114197066248f","c1","c2","fill","petal_color","noFill","y_start","y_end","lines","y_start_offset","y_end_offset","circle","ink_color","stem_color","beginShape","vertex","endShape","max_branches","textFont","noLoop"],"version":3,"file":"index.5165f1ac.js.map"}